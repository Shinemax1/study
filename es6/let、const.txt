let
    1.不存在变量提升

    2.暂时性死区

    3.不允许重复声明

    4.块级作用域
        1.外层作用域无法读取内层作用域的变量
        2.内层作用域可以定义外层作用域的同名变量。
        3.块级作用域的出现，实际上使得获得广泛应用的立即执行函数表达式（IIFE）不再必要了。

const
    1.const声明一个只读的常量。一旦声明，常量的值就不能改变

    2.const的作用域与let命令相同：只在声明所在的块级作用域内有效。

    3.暂时性死区

    4.不可重复声明

    5.本质：const实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址不得改动。对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指针，const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了。因此，将一个对象声明为常量必须非常小心。

ES6声明变量的6种方式
    1.var（声明的是顶层的对象）
    2.function
    3.let（声明的是局部的对象）
    4.const
    5.import
    6.class
